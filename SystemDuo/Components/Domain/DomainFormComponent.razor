@inherits DomainCreateUpdateViewModel
@using SystemDuo.Core.Domain.Entities;

<MudText Typo="Typo.h5">Create Domain</MudText>
<MudSpacer />

<EditForm
    Model="@Domain"
    OnValidSubmit="@(() => CreateOrUpdateDomain())">
    <MudCard
        Class="m-4"
        Elevation="0">
        <MudCardContent>
            <MudTextField 
                    Variant="Variant.Outlined" 
                    Label="Name"
                    @bind-Value="Domain.Name"
                    For="@(()=> Domain.Name)"/>
            <MudTextField Variant="Variant.Outlined"
                          Label="Theme"
                          @bind-Value="Domain.Theme"
                          For="@(()=> Domain.Theme)" />
            <MudSelect T="Webmaster" @bind-value="@SelectedWebmaster" Label="Webmaster" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                @foreach(var item in Webmasters){
                    <MudSelectItem Value="@item">@item.Name</MudSelectItem>
                }
            </MudSelect>
            <MudTextField Variant="Variant.Outlined"
                          Label="Metrics"
                          @bind-Value="Domain.Metrics"
                          For="@(()=> Domain.Metrics)" />
            <MudCardActions>
                <MudButton 
                    ButtonType="ButtonType.Submit" 
                    Variant="Variant.Filled" 
                    Color="Color.Primary" 
                    Class="ml-auto">
                    Save
                </MudButton>
            </MudCardActions>
        </MudCardContent>
    </MudCard>
</EditForm>