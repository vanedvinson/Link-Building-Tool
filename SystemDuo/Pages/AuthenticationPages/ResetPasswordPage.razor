@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using SystemDuo.Data
@inject NavigationManager navigationManager;
@inherits AuthenticationViewModel;
@layout LoginLayout;

@page "/auth/reset-password"

    <div style="align-items:center; display:flex; flex-direction:column; margin-top:20px; width:800px">
    @if (SuccessMessage != string.Empty)
    {
        <MudAlert   Severity="Severity.Success" Variant="Variant.Filled">
            @SuccessMessage</MudAlert>
    }
    
    @if (ErrorMessage != string.Empty)
    {
        <MudAlert   Severity="Severity.Error" Variant="Variant.Filled">
            @ErrorMessage</MudAlert>
    }
    
    </div>
 

<EditForm Model="@ResetPassword" OnValidSubmit="@(()=>ResetUserPassword())"   style="align-items:center; display:flex; flex-direction:column; margin-top:20px; ">
    <DataAnnotationsValidator />
    <MudCard Style="width:400px">
        <MudCardHeader>
            <CardHeaderContent>
            <MudText Typo="Typo.h6">Password reset</MudText>
        </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField Label="Passwort" InputType="InputType.Password" @bind-Value="ResetPassword.NewPassword" Required For="@(() => ResetPassword.NewPassword)"/>
            <MudTextField Label="Passwort bestätigen"  InputType="InputType.Password" @bind-Value="ResetPassword.ConfirmPassword"  Required For="@(() => ResetPassword.ConfirmPassword)"/>
          </MudCardContent> 
            <MudCardActions Style="display:flex; flex-direction:column">
                 <MudButton Class="mb-2" ButtonType="ButtonType.Submit"  Variant="Variant.Filled" Color="Color.Primary" FullWidth="true">Password reset</MudButton>
                  <MudButton  Variant="Variant.Outlined" Color="Color.Primary" @onclick="NavigateToLogin" FullWidth="true">BACK TO LOGIN</MudButton>
                
             </MudCardActions>
    </MudCard>
       
</EditForm>


@code {
      
    protected override void OnInitialized()
    {

        GetHttpParameters();

    }
   public void NavigateToLogin()
        {
          navigationManager.NavigateTo("/");
        }
 
  
}