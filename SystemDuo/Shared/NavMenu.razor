@using SystemDuo.Helpers
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject TokenStorage tokenStorage;
@inject TokenAuthenticationStateProvider _authStateProvider;
@inject NavigationManager navigationManager;
@attribute [Authorize]
<MudNavMenu Class="mud-width-full h-100" Style="background-color: #0E363C; color:white">
  <MudText Typo="Typo.h6" Class="px-4">@Name</MudText>
  @*<MudText Typo="Typo.body2" Class="px-4 mud-text-secondary">Icons</MudText>*@
  <MudDivider Class="my-2" />



<AuthorizeView Roles="Admin">
    <Authorized>
        <MudNavLink Href="/dashboard" Icon="@Icons.Filled.Layers">Dashboard</MudNavLink>
        <MudNavLink Href="/links" Icon="@Icons.Filled.InsertLink">Links</MudNavLink>
        <MudNavLink Href="/clients" Icon="@Icons.Filled.Business">Clients</MudNavLink>
        <MudNavLink Href="/domains" Icon="@Icons.Filled.AddLink">Domains</MudNavLink>
        <MudNavLink Href="/webmasters" Icon="@Icons.Filled.ManageAccounts">Webmasters</MudNavLink>
        <MudNavLink Href="/accounts" Icon="@Icons.Filled.SupervisorAccount">Users</MudNavLink>
        <MudNavLink Href="/auth/change-password" Icon="@Icons.Outlined.AccountCircle">My Account</MudNavLink>
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="Linkbuilder">
    <Authorized>
        <MudNavLink Href="/dashboard" Icon="@Icons.Filled.Layers">Dashboard</MudNavLink>
        <MudNavLink Href="/links" Icon="@Icons.Filled.InsertLink">Links</MudNavLink>
        <MudNavLink Href="/clients" Icon="@Icons.Filled.Business">Clients</MudNavLink>
        <MudNavLink Href="/domains" Icon="@Icons.Filled.AddLink">Domains</MudNavLink>
        <MudNavLink Href="/webmasters" Icon="@Icons.Filled.ManageAccounts">Webmasters</MudNavLink>
        <MudNavLink Href="/accounts" Icon="@Icons.Filled.SupervisorAccount">Users</MudNavLink>
        <MudNavLink Href="/auth/change-password" Icon="@Icons.Outlined.AccountCircle">My Account</MudNavLink>
    </Authorized>
</AuthorizeView>
 
@*<AuthorizeView Roles="Admin">
    <Authorized>
      <MudNavGroup Title="Settings" Icon="@Icons.Filled.Settings"  Expanded="true">
                <MudNavLink Href="/agents" Icon="@Icons.Filled.SupervisorAccount" >Agents</MudNavLink>
                <MudNavLink Href="/locations" Icon="@Icons.Filled.LocationCity">Locations</MudNavLink>
      <MudNavLink Href="/jobssettings" Icon="@Icons.Filled.Category">Category and Skills</MudNavLink>       
   </MudNavGroup>
   </Authorized>
</AuthorizeView>*@
<div class="w-100 p-3 text-center position-absolute bottom-0 ">
           <MudButton  Class="w-100 p-2" OnClick="Logout" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Logout" Color="Color.Primary">Logout</MudButton>
       </div>

</MudNavMenu>
@inject ProtectedLocalStorage storage;
@code{
    public string? Name{ get; set; }
    public string? Surname { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Name = (await storage.GetAsync<string>("Name")).Value;
        Surname = (await storage.GetAsync<string>("Surname")).Value;
        StateHasChanged();
    }
    public async Task Logout()
    {
            var refreshToken = await tokenStorage.GetRefreshToken();
            //await _ht.GetJsonAsync<AuthenticationResponseDto>($"{authApiUrl}/logout/{refreshToken}");
            await tokenStorage.RemoveTokens();
            _authStateProvider.StateChanged();
            navigationManager.NavigateTo("/");
            
        }
}

   
   